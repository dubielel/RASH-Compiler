# Generated from /home/milosz/SemestrIV/TKiK/RASH-Compiler/grammar/LanguageTestLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,80,621,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,1,0,1,0,1,0,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
        1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
        1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
        1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,
        1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
        1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,
        3,32,352,8,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,5,33,362,8,
        33,10,33,12,33,365,9,33,1,33,1,33,1,34,1,34,3,34,371,8,34,1,35,1,
        35,1,35,1,35,3,35,377,8,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,5,
        37,386,8,37,10,37,12,37,389,9,37,1,38,1,38,1,38,1,38,5,38,395,8,
        38,10,38,12,38,398,9,38,1,38,1,38,1,38,5,38,403,8,38,10,38,12,38,
        406,9,38,1,39,1,39,1,39,1,39,5,39,412,8,39,10,39,12,39,415,9,39,
        1,39,1,39,1,39,5,39,420,8,39,10,39,12,39,423,9,39,1,40,1,40,1,40,
        1,40,5,40,429,8,40,10,40,12,40,432,9,40,1,40,1,40,1,40,5,40,437,
        8,40,10,40,12,40,440,9,40,1,41,4,41,443,8,41,11,41,12,41,444,1,41,
        5,41,448,8,41,10,41,12,41,451,9,41,1,42,1,42,1,42,1,42,1,42,1,42,
        1,42,3,42,460,8,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,469,8,
        43,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,3,45,480,8,45,1,
        45,3,45,483,8,45,1,45,3,45,486,8,45,1,45,3,45,489,8,45,1,45,3,45,
        492,8,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,49,
        1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,
        1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,61,
        1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,
        1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,69,1,70,1,70,1,70,
        1,71,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,
        1,76,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,
        1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,
        1,87,1,88,1,88,1,88,1,88,5,88,601,8,88,10,88,12,88,604,9,88,1,88,
        1,88,1,89,1,89,1,89,1,89,5,89,612,8,89,10,89,12,89,615,9,89,1,89,
        1,89,1,89,1,89,1,89,1,613,0,90,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
        8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
        19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
        30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
        41,83,42,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,101,0,103,0,105,
        43,107,44,109,45,111,46,113,47,115,48,117,49,119,50,121,51,123,52,
        125,53,127,54,129,55,131,56,133,57,135,58,137,59,139,60,141,61,143,
        62,145,63,147,64,149,65,151,66,153,67,155,68,157,69,159,70,161,71,
        163,72,165,73,167,74,169,75,171,76,173,77,175,78,177,79,179,80,1,
        0,11,8,0,9,9,32,32,160,160,5760,5760,8192,8202,8239,8239,8287,8287,
        12288,12288,2,0,10,10,13,13,1,0,34,34,3,0,65,90,95,95,97,122,4,0,
        48,57,65,90,95,95,97,122,5,0,48,48,92,92,110,110,114,114,116,116,
        2,0,34,34,39,39,1,0,48,55,1,0,48,57,3,0,48,57,65,70,97,102,1,0,48,
        49,642,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
        0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
        0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
        0,0,81,1,0,0,0,0,83,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
        0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,
        119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
        0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,
        1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,
        0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,
        0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,
        165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,
        0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,1,181,1,0,0,0,3,185,
        1,0,0,0,5,191,1,0,0,0,7,194,1,0,0,0,9,200,1,0,0,0,11,209,1,0,0,0,
        13,212,1,0,0,0,15,217,1,0,0,0,17,225,1,0,0,0,19,235,1,0,0,0,21,242,
        1,0,0,0,23,249,1,0,0,0,25,255,1,0,0,0,27,260,1,0,0,0,29,267,1,0,
        0,0,31,271,1,0,0,0,33,274,1,0,0,0,35,278,1,0,0,0,37,281,1,0,0,0,
        39,286,1,0,0,0,41,292,1,0,0,0,43,299,1,0,0,0,45,304,1,0,0,0,47,307,
        1,0,0,0,49,311,1,0,0,0,51,315,1,0,0,0,53,321,1,0,0,0,55,326,1,0,
        0,0,57,330,1,0,0,0,59,335,1,0,0,0,61,340,1,0,0,0,63,344,1,0,0,0,
        65,351,1,0,0,0,67,355,1,0,0,0,69,370,1,0,0,0,71,376,1,0,0,0,73,378,
        1,0,0,0,75,382,1,0,0,0,77,390,1,0,0,0,79,407,1,0,0,0,81,424,1,0,
        0,0,83,442,1,0,0,0,85,459,1,0,0,0,87,468,1,0,0,0,89,470,1,0,0,0,
        91,473,1,0,0,0,93,495,1,0,0,0,95,498,1,0,0,0,97,501,1,0,0,0,99,503,
        1,0,0,0,101,505,1,0,0,0,103,507,1,0,0,0,105,509,1,0,0,0,107,511,
        1,0,0,0,109,513,1,0,0,0,111,515,1,0,0,0,113,517,1,0,0,0,115,519,
        1,0,0,0,117,521,1,0,0,0,119,523,1,0,0,0,121,525,1,0,0,0,123,527,
        1,0,0,0,125,530,1,0,0,0,127,532,1,0,0,0,129,535,1,0,0,0,131,538,
        1,0,0,0,133,541,1,0,0,0,135,544,1,0,0,0,137,547,1,0,0,0,139,551,
        1,0,0,0,141,553,1,0,0,0,143,556,1,0,0,0,145,559,1,0,0,0,147,561,
        1,0,0,0,149,563,1,0,0,0,151,566,1,0,0,0,153,569,1,0,0,0,155,572,
        1,0,0,0,157,575,1,0,0,0,159,577,1,0,0,0,161,579,1,0,0,0,163,581,
        1,0,0,0,165,583,1,0,0,0,167,585,1,0,0,0,169,588,1,0,0,0,171,590,
        1,0,0,0,173,592,1,0,0,0,175,594,1,0,0,0,177,596,1,0,0,0,179,607,
        1,0,0,0,181,182,5,102,0,0,182,183,5,111,0,0,183,184,5,114,0,0,184,
        2,1,0,0,0,185,186,5,119,0,0,186,187,5,104,0,0,187,188,5,105,0,0,
        188,189,5,108,0,0,189,190,5,101,0,0,190,4,1,0,0,0,191,192,5,105,
        0,0,192,193,5,110,0,0,193,6,1,0,0,0,194,195,5,98,0,0,195,196,5,114,
        0,0,196,197,5,101,0,0,197,198,5,97,0,0,198,199,5,107,0,0,199,8,1,
        0,0,0,200,201,5,99,0,0,201,202,5,111,0,0,202,203,5,110,0,0,203,204,
        5,116,0,0,204,205,5,105,0,0,205,206,5,110,0,0,206,207,5,117,0,0,
        207,208,5,101,0,0,208,10,1,0,0,0,209,210,5,105,0,0,210,211,5,102,
        0,0,211,12,1,0,0,0,212,213,5,101,0,0,213,214,5,108,0,0,214,215,5,
        115,0,0,215,216,5,101,0,0,216,14,1,0,0,0,217,218,5,112,0,0,218,219,
        5,114,0,0,219,220,5,105,0,0,220,221,5,118,0,0,221,222,5,97,0,0,222,
        223,5,116,0,0,223,224,5,101,0,0,224,16,1,0,0,0,225,226,5,112,0,0,
        226,227,5,114,0,0,227,228,5,111,0,0,228,229,5,116,0,0,229,230,5,
        101,0,0,230,231,5,99,0,0,231,232,5,116,0,0,232,233,5,101,0,0,233,
        234,5,100,0,0,234,18,1,0,0,0,235,236,5,112,0,0,236,237,5,117,0,0,
        237,238,5,98,0,0,238,239,5,108,0,0,239,240,5,105,0,0,240,241,5,99,
        0,0,241,20,1,0,0,0,242,243,5,115,0,0,243,244,5,116,0,0,244,245,5,
        97,0,0,245,246,5,116,0,0,246,247,5,105,0,0,247,248,5,99,0,0,248,
        22,1,0,0,0,249,250,5,99,0,0,250,251,5,108,0,0,251,252,5,97,0,0,252,
        253,5,115,0,0,253,254,5,115,0,0,254,24,1,0,0,0,255,256,5,102,0,0,
        256,257,5,117,0,0,257,258,5,110,0,0,258,259,5,99,0,0,259,26,1,0,
        0,0,260,261,5,114,0,0,261,262,5,101,0,0,262,263,5,116,0,0,263,264,
        5,117,0,0,264,265,5,114,0,0,265,266,5,110,0,0,266,28,1,0,0,0,267,
        268,5,97,0,0,268,269,5,110,0,0,269,270,5,100,0,0,270,30,1,0,0,0,
        271,272,5,111,0,0,272,273,5,114,0,0,273,32,1,0,0,0,274,275,5,110,
        0,0,275,276,5,111,0,0,276,277,5,116,0,0,277,34,1,0,0,0,278,279,5,
        105,0,0,279,280,5,115,0,0,280,36,1,0,0,0,281,282,5,84,0,0,282,283,
        5,114,0,0,283,284,5,117,0,0,284,285,5,101,0,0,285,38,1,0,0,0,286,
        287,5,70,0,0,287,288,5,97,0,0,288,289,5,108,0,0,289,290,5,115,0,
        0,290,291,5,101,0,0,291,40,1,0,0,0,292,293,5,105,0,0,293,294,5,109,
        0,0,294,295,5,112,0,0,295,296,5,111,0,0,296,297,5,114,0,0,297,298,
        5,116,0,0,298,42,1,0,0,0,299,300,5,102,0,0,300,301,5,114,0,0,301,
        302,5,111,0,0,302,303,5,109,0,0,303,44,1,0,0,0,304,305,5,97,0,0,
        305,306,5,115,0,0,306,46,1,0,0,0,307,308,5,110,0,0,308,309,5,101,
        0,0,309,310,5,119,0,0,310,48,1,0,0,0,311,312,5,105,0,0,312,313,5,
        110,0,0,313,314,5,116,0,0,314,50,1,0,0,0,315,316,5,102,0,0,316,317,
        5,108,0,0,317,318,5,111,0,0,318,319,5,97,0,0,319,320,5,116,0,0,320,
        52,1,0,0,0,321,322,5,99,0,0,322,323,5,104,0,0,323,324,5,97,0,0,324,
        325,5,114,0,0,325,54,1,0,0,0,326,327,5,115,0,0,327,328,5,116,0,0,
        328,329,5,114,0,0,329,56,1,0,0,0,330,331,5,118,0,0,331,332,5,111,
        0,0,332,333,5,105,0,0,333,334,5,100,0,0,334,58,1,0,0,0,335,336,5,
        98,0,0,336,337,5,111,0,0,337,338,5,111,0,0,338,339,5,108,0,0,339,
        60,1,0,0,0,340,341,5,118,0,0,341,342,5,97,0,0,342,343,5,114,0,0,
        343,62,1,0,0,0,344,345,7,0,0,0,345,346,1,0,0,0,346,347,6,31,0,0,
        347,64,1,0,0,0,348,349,5,13,0,0,349,352,5,10,0,0,350,352,7,1,0,0,
        351,348,1,0,0,0,351,350,1,0,0,0,352,353,1,0,0,0,353,354,6,32,0,0,
        354,66,1,0,0,0,355,363,5,34,0,0,356,362,8,2,0,0,357,362,3,93,46,
        0,358,362,3,85,42,0,359,362,3,91,45,0,360,362,3,95,47,0,361,356,
        1,0,0,0,361,357,1,0,0,0,361,358,1,0,0,0,361,359,1,0,0,0,361,360,
        1,0,0,0,362,365,1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,0,364,366,
        1,0,0,0,365,363,1,0,0,0,366,367,5,34,0,0,367,68,1,0,0,0,368,371,
        3,37,18,0,369,371,3,39,19,0,370,368,1,0,0,0,370,369,1,0,0,0,371,
        70,1,0,0,0,372,377,3,75,37,0,373,377,3,81,40,0,374,377,3,79,39,0,
        375,377,3,77,38,0,376,372,1,0,0,0,376,373,1,0,0,0,376,374,1,0,0,
        0,376,375,1,0,0,0,377,72,1,0,0,0,378,379,3,75,37,0,379,380,5,46,
        0,0,380,381,3,75,37,0,381,74,1,0,0,0,382,387,3,99,49,0,383,386,3,
        99,49,0,384,386,5,95,0,0,385,383,1,0,0,0,385,384,1,0,0,0,386,389,
        1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,0,388,76,1,0,0,0,389,387,1,
        0,0,0,390,391,5,48,0,0,391,392,5,120,0,0,392,396,1,0,0,0,393,395,
        5,95,0,0,394,393,1,0,0,0,395,398,1,0,0,0,396,394,1,0,0,0,396,397,
        1,0,0,0,397,399,1,0,0,0,398,396,1,0,0,0,399,404,3,101,50,0,400,403,
        3,101,50,0,401,403,5,95,0,0,402,400,1,0,0,0,402,401,1,0,0,0,403,
        406,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,78,1,0,0,0,406,404,
        1,0,0,0,407,408,5,48,0,0,408,409,5,111,0,0,409,413,1,0,0,0,410,412,
        5,95,0,0,411,410,1,0,0,0,412,415,1,0,0,0,413,411,1,0,0,0,413,414,
        1,0,0,0,414,416,1,0,0,0,415,413,1,0,0,0,416,421,3,97,48,0,417,420,
        3,97,48,0,418,420,5,95,0,0,419,417,1,0,0,0,419,418,1,0,0,0,420,423,
        1,0,0,0,421,419,1,0,0,0,421,422,1,0,0,0,422,80,1,0,0,0,423,421,1,
        0,0,0,424,425,5,48,0,0,425,426,5,98,0,0,426,430,1,0,0,0,427,429,
        5,95,0,0,428,427,1,0,0,0,429,432,1,0,0,0,430,428,1,0,0,0,430,431,
        1,0,0,0,431,433,1,0,0,0,432,430,1,0,0,0,433,438,3,103,51,0,434,437,
        3,103,51,0,435,437,5,95,0,0,436,434,1,0,0,0,436,435,1,0,0,0,437,
        440,1,0,0,0,438,436,1,0,0,0,438,439,1,0,0,0,439,82,1,0,0,0,440,438,
        1,0,0,0,441,443,7,3,0,0,442,441,1,0,0,0,443,444,1,0,0,0,444,442,
        1,0,0,0,444,445,1,0,0,0,445,449,1,0,0,0,446,448,7,4,0,0,447,446,
        1,0,0,0,448,451,1,0,0,0,449,447,1,0,0,0,449,450,1,0,0,0,450,84,1,
        0,0,0,451,449,1,0,0,0,452,453,5,92,0,0,453,454,5,120,0,0,454,455,
        1,0,0,0,455,456,3,97,48,0,456,457,3,101,50,0,457,460,1,0,0,0,458,
        460,3,89,44,0,459,452,1,0,0,0,459,458,1,0,0,0,460,86,1,0,0,0,461,
        462,5,92,0,0,462,463,5,120,0,0,463,464,1,0,0,0,464,465,3,101,50,
        0,465,466,3,101,50,0,466,469,1,0,0,0,467,469,3,89,44,0,468,461,1,
        0,0,0,468,467,1,0,0,0,469,88,1,0,0,0,470,471,5,92,0,0,471,472,7,
        5,0,0,472,90,1,0,0,0,473,474,5,92,0,0,474,475,5,117,0,0,475,476,
        5,123,0,0,476,477,1,0,0,0,477,479,3,101,50,0,478,480,3,101,50,0,
        479,478,1,0,0,0,479,480,1,0,0,0,480,482,1,0,0,0,481,483,3,101,50,
        0,482,481,1,0,0,0,482,483,1,0,0,0,483,485,1,0,0,0,484,486,3,101,
        50,0,485,484,1,0,0,0,485,486,1,0,0,0,486,488,1,0,0,0,487,489,3,101,
        50,0,488,487,1,0,0,0,488,489,1,0,0,0,489,491,1,0,0,0,490,492,3,101,
        50,0,491,490,1,0,0,0,491,492,1,0,0,0,492,493,1,0,0,0,493,494,5,125,
        0,0,494,92,1,0,0,0,495,496,5,92,0,0,496,497,7,6,0,0,497,94,1,0,0,
        0,498,499,5,92,0,0,499,500,5,10,0,0,500,96,1,0,0,0,501,502,7,7,0,
        0,502,98,1,0,0,0,503,504,7,8,0,0,504,100,1,0,0,0,505,506,7,9,0,0,
        506,102,1,0,0,0,507,508,7,10,0,0,508,104,1,0,0,0,509,510,5,44,0,
        0,510,106,1,0,0,0,511,512,5,46,0,0,512,108,1,0,0,0,513,514,5,40,
        0,0,514,110,1,0,0,0,515,516,5,41,0,0,516,112,1,0,0,0,517,518,5,123,
        0,0,518,114,1,0,0,0,519,520,5,125,0,0,520,116,1,0,0,0,521,522,5,
        91,0,0,522,118,1,0,0,0,523,524,5,93,0,0,524,120,1,0,0,0,525,526,
        5,58,0,0,526,122,1,0,0,0,527,528,5,45,0,0,528,529,5,62,0,0,529,124,
        1,0,0,0,530,531,5,61,0,0,531,126,1,0,0,0,532,533,5,42,0,0,533,534,
        5,61,0,0,534,128,1,0,0,0,535,536,5,47,0,0,536,537,5,61,0,0,537,130,
        1,0,0,0,538,539,5,37,0,0,539,540,5,61,0,0,540,132,1,0,0,0,541,542,
        5,43,0,0,542,543,5,61,0,0,543,134,1,0,0,0,544,545,5,45,0,0,545,546,
        5,61,0,0,546,136,1,0,0,0,547,548,5,42,0,0,548,549,5,42,0,0,549,550,
        5,61,0,0,550,138,1,0,0,0,551,552,5,59,0,0,552,140,1,0,0,0,553,554,
        5,61,0,0,554,555,5,61,0,0,555,142,1,0,0,0,556,557,5,33,0,0,557,558,
        5,61,0,0,558,144,1,0,0,0,559,560,5,60,0,0,560,146,1,0,0,0,561,562,
        5,62,0,0,562,148,1,0,0,0,563,564,5,60,0,0,564,565,5,61,0,0,565,150,
        1,0,0,0,566,567,5,62,0,0,567,568,5,61,0,0,568,152,1,0,0,0,569,570,
        5,60,0,0,570,571,5,60,0,0,571,154,1,0,0,0,572,573,5,62,0,0,573,574,
        5,62,0,0,574,156,1,0,0,0,575,576,5,43,0,0,576,158,1,0,0,0,577,578,
        5,45,0,0,578,160,1,0,0,0,579,580,5,42,0,0,580,162,1,0,0,0,581,582,
        5,47,0,0,582,164,1,0,0,0,583,584,5,37,0,0,584,166,1,0,0,0,585,586,
        5,42,0,0,586,587,5,42,0,0,587,168,1,0,0,0,588,589,5,38,0,0,589,170,
        1,0,0,0,590,591,5,94,0,0,591,172,1,0,0,0,592,593,5,124,0,0,593,174,
        1,0,0,0,594,595,5,63,0,0,595,176,1,0,0,0,596,597,5,47,0,0,597,598,
        5,47,0,0,598,602,1,0,0,0,599,601,8,1,0,0,600,599,1,0,0,0,601,604,
        1,0,0,0,602,600,1,0,0,0,602,603,1,0,0,0,603,605,1,0,0,0,604,602,
        1,0,0,0,605,606,6,88,0,0,606,178,1,0,0,0,607,608,5,47,0,0,608,609,
        5,42,0,0,609,613,1,0,0,0,610,612,9,0,0,0,611,610,1,0,0,0,612,615,
        1,0,0,0,613,614,1,0,0,0,613,611,1,0,0,0,614,616,1,0,0,0,615,613,
        1,0,0,0,616,617,5,42,0,0,617,618,5,47,0,0,618,619,1,0,0,0,619,620,
        6,89,0,0,620,180,1,0,0,0,28,0,351,361,363,370,376,385,387,396,402,
        404,413,419,421,430,436,438,444,449,459,468,479,482,485,488,491,
        602,613,1,6,0,0
    ]

class LanguageTestLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    KW_FOR = 1
    KW_WHILE = 2
    KW_IN = 3
    KW_BREAK = 4
    KW_CONTINUE = 5
    KW_IF = 6
    KW_ELSE = 7
    KW_PRIVATE = 8
    KW_PROTECTED = 9
    KW_PUBLIC = 10
    KW_STATIC = 11
    KW_CLASS = 12
    KW_FUNCTION = 13
    KW_RETURN = 14
    KW_AND = 15
    KW_OR = 16
    KW_NOT = 17
    KW_IS = 18
    KW_TRUE = 19
    KW_FALSE = 20
    KW_IMPORT = 21
    KW_FROM = 22
    KW_AS = 23
    KW_NEW = 24
    T_INT = 25
    T_FLOAT = 26
    T_CHAR = 27
    T_STRING = 28
    T_VOID = 29
    T_BOOL = 30
    DECL_VAR = 31
    WHITESPACE = 32
    NEWLINE = 33
    STRING_LITERAL = 34
    BOOL_LITERAL = 35
    INTEGER_LITERAL = 36
    FLOAT_LITERAL = 37
    DEC_LITERAL = 38
    HEX_LITERAL = 39
    OCT_LITERAL = 40
    BIN_LITERAL = 41
    IDENTIFIER = 42
    COMMA = 43
    DOT = 44
    LPAREN = 45
    RPAREN = 46
    LBRACE = 47
    RBRACE = 48
    LBRACKET = 49
    RBRACKET = 50
    COLON = 51
    ARROW = 52
    ASSIGN = 53
    STAR_ASSIGN = 54
    DIV_ASSIGN = 55
    MOD_ASSIGN = 56
    PLUS_ASSIGN = 57
    MINUS_ASSIGN = 58
    POW_ASSIGN = 59
    SEMI = 60
    EQ = 61
    NE = 62
    LT = 63
    GT = 64
    LE = 65
    GE = 66
    LSHIFT = 67
    RSHIFT = 68
    PLUS = 69
    MINUS = 70
    STAR = 71
    DIV = 72
    MOD = 73
    POW = 74
    AND = 75
    CARET = 76
    OR = 77
    QUESTION = 78
    SINGLE_LINE_COMMENT = 79
    MULTI_LINE_COMMENT = 80

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'for'", "'while'", "'in'", "'break'", "'continue'", "'if'", 
            "'else'", "'private'", "'protected'", "'public'", "'static'", 
            "'class'", "'func'", "'return'", "'and'", "'or'", "'not'", "'is'", 
            "'True'", "'False'", "'import'", "'from'", "'as'", "'new'", 
            "'int'", "'float'", "'char'", "'str'", "'void'", "'bool'", "'var'", 
            "','", "'.'", "'('", "')'", "'{'", "'}'", "'['", "']'", "':'", 
            "'->'", "'='", "'*='", "'/='", "'%='", "'+='", "'-='", "'**='", 
            "';'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'<<'", 
            "'>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'**'", "'&'", "'^'", 
            "'|'", "'?'" ]

    symbolicNames = [ "<INVALID>",
            "KW_FOR", "KW_WHILE", "KW_IN", "KW_BREAK", "KW_CONTINUE", "KW_IF", 
            "KW_ELSE", "KW_PRIVATE", "KW_PROTECTED", "KW_PUBLIC", "KW_STATIC", 
            "KW_CLASS", "KW_FUNCTION", "KW_RETURN", "KW_AND", "KW_OR", "KW_NOT", 
            "KW_IS", "KW_TRUE", "KW_FALSE", "KW_IMPORT", "KW_FROM", "KW_AS", 
            "KW_NEW", "T_INT", "T_FLOAT", "T_CHAR", "T_STRING", "T_VOID", 
            "T_BOOL", "DECL_VAR", "WHITESPACE", "NEWLINE", "STRING_LITERAL", 
            "BOOL_LITERAL", "INTEGER_LITERAL", "FLOAT_LITERAL", "DEC_LITERAL", 
            "HEX_LITERAL", "OCT_LITERAL", "BIN_LITERAL", "IDENTIFIER", "COMMA", 
            "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
            "COLON", "ARROW", "ASSIGN", "STAR_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", 
            "PLUS_ASSIGN", "MINUS_ASSIGN", "POW_ASSIGN", "SEMI", "EQ", "NE", 
            "LT", "GT", "LE", "GE", "LSHIFT", "RSHIFT", "PLUS", "MINUS", 
            "STAR", "DIV", "MOD", "POW", "AND", "CARET", "OR", "QUESTION", 
            "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT" ]

    ruleNames = [ "KW_FOR", "KW_WHILE", "KW_IN", "KW_BREAK", "KW_CONTINUE", 
                  "KW_IF", "KW_ELSE", "KW_PRIVATE", "KW_PROTECTED", "KW_PUBLIC", 
                  "KW_STATIC", "KW_CLASS", "KW_FUNCTION", "KW_RETURN", "KW_AND", 
                  "KW_OR", "KW_NOT", "KW_IS", "KW_TRUE", "KW_FALSE", "KW_IMPORT", 
                  "KW_FROM", "KW_AS", "KW_NEW", "T_INT", "T_FLOAT", "T_CHAR", 
                  "T_STRING", "T_VOID", "T_BOOL", "DECL_VAR", "WHITESPACE", 
                  "NEWLINE", "STRING_LITERAL", "BOOL_LITERAL", "INTEGER_LITERAL", 
                  "FLOAT_LITERAL", "DEC_LITERAL", "HEX_LITERAL", "OCT_LITERAL", 
                  "BIN_LITERAL", "IDENTIFIER", "ASCII_ESCAPE", "BYTE_ESCAPE", 
                  "COMMON_ESCAPE", "UNICODE_ESCAPE", "QUOTE_ESCAPE", "NEWLINE_ESCAPE", 
                  "OCT_DIGIT", "DEC_DIGIT", "HEX_DIGIT", "BIN_DIGIT", "COMMA", 
                  "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", 
                  "RBRACKET", "COLON", "ARROW", "ASSIGN", "STAR_ASSIGN", 
                  "DIV_ASSIGN", "MOD_ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", 
                  "POW_ASSIGN", "SEMI", "EQ", "NE", "LT", "GT", "LE", "GE", 
                  "LSHIFT", "RSHIFT", "PLUS", "MINUS", "STAR", "DIV", "MOD", 
                  "POW", "AND", "CARET", "OR", "QUESTION", "SINGLE_LINE_COMMENT", 
                  "MULTI_LINE_COMMENT" ]

    grammarFileName = "LanguageTestLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


